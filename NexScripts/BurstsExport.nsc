% SurpriseBurstsExport.nsc
% Created by Daniel Vicarel on 9/4/14, 8:20 pm

% void SurpriseBurstsExport()
% Scans through every PLX file in a folder selected by the user
% Each file is burst analyzed with the provided algorithm, and the resulting burst timestamps are exported to text files

Global filePath
Global fileName

Global algorithm
Global minSurprise
Global maxISIToStart
Global minISIToEnd
Global minIBI
Global minBurstDur
Global minSpikesInBurst

NexOnTop()

% Remind future developers of how to make this script work properly
MsgBox("For this to work properly, make sure that:")
MsgBox(" 	NeuroExplorer is set to export Neuron (spike) and Interval data only! (must be reset every NeuroExplorer is opened)")
MsgBox("	The Scrips directory (under Script > Script Options) is set appropriately")
MsgBox("	The Templates directory (under View > Options > Templates) is set appropriately")

% Let user choose data folder by selecting one of its files in a File Open dialog
rootPath = SelectFile()
if (rootPath == "")
	MsgBox("")
	MsgBox("No folder selected.")
	return
end

% Set path to the data folder
tempPath = rootPath
while Find(tempPath, "\") <> 0
	slashPos = Find(tempPath, "\")
	tempPath = Mid(tempPath, slashPos + 1, StrLength(tempPath) - slashPos)
end
rootPath = Left(rootPath, Find(rootPath, tempPath) - 2)
MsgBox("Folder: " + rootPath)

% Make sure there is at least one .PLX file in the folder
if (GetFileCount(rootPath + "\*.plx") == 0)
	MsgBox("")
	MsgBox("No .PLX files in Folder")
	return
end

% Ask the user which burst analysis algorithm they wish to use
algorithm = "Surprise"
result = Dialog(GetActiveDocument(), algorithm, "Algorithm to use (Max Interval or Surprise)", "string")
if (result <> 1)
	MsgBox("")
	MsgBox("No Burst Analysis algorithm provided.")
	return
end
if (algorithm <> "Max Interval") & (algorithm <> "Surprise")
	MsgBox("")
	MsgBox("Algorithm must be 'Max Interval' or 'Surprise' (case sensitive).")
	return
end

% Allow the user to set parameters based on the selected analysis algorithm
MsgBox("Algorithm: " + algorithm)
minSurprise = 4
maxISIToStart = 0.5
minISIToEnd = 0.5
minIBI = 1
minBurstDur = 0.1
minSpikesInBurst = 4
if (algorithm == "Surprise")
	result = Dialog(GetActiveDocument(), minSurprise, "Min Surprise:", "number")
else
	result = Dialog(GetActiveDocument(), maxISIToStart,    "Max ISI To Start Burst",  "number", \
									     minISIToEnd,      "Min ISI To End Burst",    "number", \
									     minIBI, 		   "Min Interburst Interval", "number", \
									     minBurstDur,      "Min Burst Duration",      "number", \
									     minSpikesInBurst, "Min Spikes Per Burst",    "number")
	if ((maxISIToStart <= 0) | (minISIToEnd <= 0) | (minIBI <= 0) | (minBurstDur <= 0) | (minSpikesInBurst <= 0))
		MsgBox("")
		MsgBox("All Max Interval parameters must be positive.")
		return
	end
end
if (result <> 1)
	MsgBox("")
	MsgBox("Burst Analysis using " + algorithm + " algorithm was canceled.")
	return
end

% Process all .PLX files in the folder
MsgBox("")
for recording = 1 to GetFileCount(rootPath + "\*.plx")
	filePath = GetFileName(recording)
	RunScript("BurstAnalyzeFile")
end

% Display success
MsgBox("")
MsgBox("All " + NumToStr(GetFileCount(rootPath + "\*.plx")) + " PLX files in this folder were succesfully burst-analyzed and exported.")
MsgBox("I hope you remembered to export only Neuron (spike) and Interval data!")